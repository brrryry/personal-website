name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # Adjust this if you use a different branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t portfolio:latest .
    
    # Step 3: Get Build Time
    - name: Get Build Time
      run: |
        echo "Build Time: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
      

    # Step 4: Compress Docker Image
    - name: Compress Docker Image
      run: |
        docker save -o image.tar portfolio:latest

    # Step 5: Copy Docker Image to Server 
    - name: Copy Docker Image to Server
      env: 
        REMOTE_USER: $({ secrets.SSH_REMOTE_USER })
        REMOTE_HOST: $({ secrets.SSH_REMOTE_HOST })
        REMOTE_PORT: $({ secrets.SSH_REMOTE_PORT })
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

        scp image.tar $REMOTE_USER@$REMOTE_HOST:/tmp/image.tar

    # Step 6: Deploy the Docker image
    - name: Deploy Docker Image
      env:
        REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.SSH_REMOTE_PORT }}
      run: |
        ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT << 'EOF'
        docker load -i /tmp/image.tar
        
        docker stop portfolio || true
        docker rm portfolio || true

        docker run -d --name portfolio -p 80:80 portfolio:latest

        rm /tmp/image.tar
      EOF
